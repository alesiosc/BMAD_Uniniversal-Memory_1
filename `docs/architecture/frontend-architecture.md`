# Frontend Architecture

### Component Architecture
**Component Organization**
We will organize components into a clear hierarchy within the `src/components` directory to distinguish between generic, reusable elements and feature-specific ones.
```text
src/
└── components/
    ├── ui/
    │   ├── Button.tsx
    │   └── SearchBar.tsx
    ├── layout/
    │   ├── Sidebar.tsx
    │   └── PageWrapper.tsx
    └── features/
        ├── MemoryFeed.tsx
        └── ConversationView.tsx
        
        import React from 'react';

type MyComponentProps = {
  // Define component props here
};

export const MyComponent: React.FC<MyComponentProps> = (props) => {
  return (
    <div>
      {/* Component JSX here */}
    </div>
  );
};

src/
└── stores/
    ├── settingsStore.ts
    └── conversationStore.ts

    // src/services/apiClient.ts
const API_BASE_URL = '[http://127.0.0.1:8000](http://127.0.0.1:8000)';

export const apiClient = {
  async get(endpoint: string) {
    const response = await fetch(`${API_BASE_URL}${endpoint}`);
    if (!response.ok) throw new Error('Network response was not ok');
    return response.json();
  },
  // Add post, delete methods etc.
};

// src/services/conversationService.ts
import { apiClient } from './apiClient';
import type { Conversation } from '../types'; // Assuming a shared types file

export const conversationService = {
  getAll: (): Promise<Conversation[]> => {
    return apiClient.get('/conversations');
  },
};